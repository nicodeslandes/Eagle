<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:s="clr-namespace:System;assembly=mscorlib"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:cal="http://www.caliburnproject.org">
    <SolidColorBrush x:Key="ContextMenuBackground" Color="#FFFEFC" />
    <ControlTemplate TargetType="MenuItem" x:Key="SubMenuHeaderTemplate">
        <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="templateRoot" SnapsToDevicePixels="True">
            <Grid Margin="-1,-1,-1,-1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="13" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Content="{TemplateBinding MenuItem.Icon}" ContentSource="Icon" Name="Icon" Width="16" Height="16" Margin="3,3,3,3" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                <Border BorderThickness="1,1,1,1" BorderBrush="#FF26A0DA" Background="#3D26A0DA" Name="GlyphPanel" Width="22" Height="22" Margin="-1,0,0,0" VerticalAlignment="Center" Visibility="Hidden">
                    <Path Data="{DynamicResource ť}" Fill="#FF212121" Name="Glyph" Width="9" Height="11" FlowDirection="LeftToRight" />
                </Border>
                <Border Background="{StaticResource ContextMenuBackground}" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="Left" VerticalAlignment="Center"
                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Grid.Column="2"
                        RenderOptions.ClearTypeHint="Enabled">
                    <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding HeaderedContentControl.Header}"
                                      ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                      ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentSource="Header" />
                </Border>
                <TextBlock Text="{TemplateBinding MenuItem.InputGestureText}" Margin="{TemplateBinding Control.Padding}" VerticalAlignment="Center" Opacity="0.7" Grid.Column="4" />
                <Path Data="M0,0L4,3.5 0,7z" Fill="#FF212121" Name="RightArrow" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="5" />
                <Popup Placement="Right" HorizontalOffset="-2" VerticalOffset="-3" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" AllowsTransparency="True" Name="PART_Popup" Focusable="False" IsOpen="{TemplateBinding IsSubmenuOpen}">
                    <Grid>
                        <Rectangle Fill="#71000000" Margin="5">
                            <Rectangle.Effect>
                                <DropShadowEffect BlurRadius="5" />
                            </Rectangle.Effect>
                        </Rectangle>
                        <Border BorderThickness="1" Padding="1" BorderBrush="#FF999999" Background="{StaticResource ContextMenuBackground}" Name="SubMenuBorder" Margin="0,0,4,4">
                            <ScrollViewer Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=FrameworkElement, ResourceId=MenuScrollViewer}}" Name="SubMenuScrollViewer">
                                <Grid  RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas Width="0" Height="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                        <Rectangle Fill="{x:Null}" Name="OpaqueRect" Width="Auto" Height="Auto" />
                                    </Canvas>
                                    <Rectangle RadiusX="2" RadiusY="2" Fill="#FFF1F1F1" Width="28" Margin="1,1,1,1" HorizontalAlignment="Left" />
                                    <Rectangle Fill="#FFE2E3E3" Width="1" Margin="29,1,0,1" HorizontalAlignment="Left" />
                                    <Rectangle Fill="#FFFFFFFF" Width="1" Margin="30,1,0,1" HorizontalAlignment="Left" />
                                    <ItemsPresenter Name="ItemsPresenter" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="2,1" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.IsSuspendingPopupAnimation">
                <Setter Property="Popup.PopupAnimation" TargetName="PART_Popup">
                    <Setter.Value>
                        <x:Static Member="PopupAnimation.None" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <Trigger Property="MenuItem.Icon">
                <Setter Property="UIElement.Visibility" TargetName="Icon">
                    <Setter.Value>
                        <x:Static Member="Visibility.Collapsed" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <x:Null />
                </Trigger.Value>
            </Trigger>
            <Trigger Property="MenuItem.IsChecked">
                <Setter Property="UIElement.Visibility" TargetName="GlyphPanel">
                    <Setter.Value>
                        <x:Static Member="Visibility.Visible" />
                    </Setter.Value>
                </Setter>
                <Setter Property="UIElement.Visibility" TargetName="Icon">
                    <Setter.Value>
                        <x:Static Member="Visibility.Collapsed" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <Trigger Property="MenuItem.IsHighlighted">
                <Setter Property="Panel.Background" TargetName="templateRoot">
                    <Setter.Value>
                        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                    <Setter.Value>
                        <SolidColorBrush>#FF26A0DA</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled">
                <Setter Property="TextElement.Foreground" TargetName="templateRoot">
                    <Setter.Value>
                        <SolidColorBrush>#FF707070</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Shape.Fill" TargetName="Glyph">
                    <Setter.Value>
                        <SolidColorBrush>#FF707070</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Shape.Fill" TargetName="RightArrow">
                    <Setter.Value>
                        <SolidColorBrush>#FF707070</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect">
                    <Setter.Value>
                        <Binding Path="VerticalOffset" ElementName="SubMenuScrollViewer" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect">
                    <Setter.Value>
                        <Binding Path="HorizontalOffset" ElementName="SubMenuScrollViewer" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                </Trigger.Value>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate TargetType="MenuItem" x:Key="SubMenuItemTemplate">
        <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="templateRoot" SnapsToDevicePixels="True">
            <Grid Margin="-1,-1,-1,-1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="13" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Content="{TemplateBinding MenuItem.Icon}" ContentSource="Icon" Name="Icon" Width="16" Height="16" Margin="3,3,3,3" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                <Border BorderThickness="1,1,1,1" BorderBrush="#FF26A0DA" Background="#3D26A0DA" Name="GlyphPanel" Width="22" Height="22" Margin="-1,0,0,0" VerticalAlignment="Center" Visibility="Hidden">
                    <Path Data="{DynamicResource ť}" Fill="#FF212121" Name="Glyph" Width="9" Height="11" FlowDirection="LeftToRight" />
                </Border>
                <Border Background="{StaticResource ContextMenuBackground}" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="Left" VerticalAlignment="Center"
                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Grid.Column="2"
                        RenderOptions.ClearTypeHint="Enabled">
                    <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding HeaderedContentControl.Header}"
                                      ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                      ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentSource="Header" />
                </Border>
                <TextBlock Text="{TemplateBinding MenuItem.InputGestureText}" Margin="{TemplateBinding Control.Padding}" VerticalAlignment="Center" Opacity="0.7" Grid.Column="4" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.Icon">
                <Setter Property="UIElement.Visibility" TargetName="Icon">
                    <Setter.Value>
                        <x:Static Member="Visibility.Collapsed" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <x:Null />
                </Trigger.Value>
            </Trigger>
            <Trigger Property="MenuItem.IsChecked">
                <Setter Property="UIElement.Visibility" TargetName="GlyphPanel">
                    <Setter.Value>
                        <x:Static Member="Visibility.Visible" />
                    </Setter.Value>
                </Setter>
                <Setter Property="UIElement.Visibility" TargetName="Icon">
                    <Setter.Value>
                        <x:Static Member="Visibility.Collapsed" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <Trigger Property="MenuItem.IsHighlighted">
                <Setter Property="Panel.Background" TargetName="templateRoot">
                    <Setter.Value>
                        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                    <Setter.Value>
                        <SolidColorBrush>#FF26A0DA</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled">
                <Setter Property="TextElement.Foreground" TargetName="templateRoot">
                    <Setter.Value>
                        <SolidColorBrush>#FF707070</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Shape.Fill" TargetName="Glyph">
                    <Setter.Value>
                        <SolidColorBrush>#FF707070</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                </Trigger.Value>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style TargetType="{x:Type MenuItem}" x:Key="DataBoundMenuItemStyle" BasedOn="{StaticResource {x:Type MenuItem}}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <!--<Setter Property="Command" Value="{Binding Command}" />-->
        <Setter Property="cal:Message.Attach" Value="InvokeAction" />
        <Setter Property="Control.HorizontalContentAlignment">
            <Setter.Value>
                <Binding Path="HorizontalContentAlignment" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ItemsControl, AncestorLevel=1}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.VerticalContentAlignment">
            <Setter.Value>
                <Binding Path="VerticalContentAlignment" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ItemsControl, AncestorLevel=1}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background">
            <Setter.Value>
                <SolidColorBrush>#00FFFFFF</SolidColorBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Border.BorderBrush">
            <Setter.Value>
                <SolidColorBrush>#00FFFFFF</SolidColorBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Border.BorderThickness">
            <Setter.Value>
                <Thickness>1,1,1,1</Thickness>
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.PanningMode">
            <Setter.Value>
                <x:Static Member="PanningMode.Both" />
            </Setter.Value>
        </Setter>
        <Setter Property="Stylus.IsFlicksEnabled">
            <Setter.Value>
                <s:Boolean>False</s:Boolean>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template"
            Value="{StaticResource SubMenuItemTemplate}" />
        <Style.Triggers>
            <Trigger Property="MenuItem.Role">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{ComponentResourceKey TypeInTargetAssembly=MenuItem, ResourceId=TopLevelHeaderTemplateKey}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Control.Padding">
                    <Setter.Value>
                        <Thickness>6,0,6,0</Thickness>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <x:Static Member="MenuItemRole.TopLevelHeader" />
                </Trigger.Value>
            </Trigger>
            <Trigger Property="MenuItem.Role">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{ComponentResourceKey TypeInTargetAssembly=MenuItem, ResourceId=TopLevelItemTemplateKey}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Control.Padding">
                    <Setter.Value>
                        <Thickness>6,0,6,0</Thickness>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <x:Static Member="MenuItemRole.TopLevelItem" />
                </Trigger.Value>
            </Trigger>
            <Trigger Property="MenuItem.Role">
                <Setter Property="Template" Value="{StaticResource SubMenuHeaderTemplate}" />
                <Trigger.Value>
                    <x:Static Member="MenuItemRole.SubmenuHeader" />
                </Trigger.Value>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ContextMenu}" x:Key="DataBoundContextMenuStyle">
        <Setter Property="Background" Value="{StaticResource ContextMenuBackground}" />
        <Setter Property="ItemsSource" Value="{Binding ContextMenuItems}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource DataBoundMenuItemStyle}" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <HierarchicalDataTemplate ItemsSource="{Binding SubItems}" >
                    <TextBlock Text="{Binding Header}"/>
                </HierarchicalDataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>